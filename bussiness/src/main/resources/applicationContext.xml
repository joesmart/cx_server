<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:jdbc="http://www.springframework.org/schema/jdbc"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:jpa="http://www.springframework.org/schema/data/jpa"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd
		http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.1.xsd
      http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.1.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd
		http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa.xsd"
       default-lazy-init="true">

    <description>Spring公共配置</description>

    <!-- 使用annotation 自动注册bean, 并保证@Required、@Autowired的属性被注入 -->
    <context:component-scan base-package="com.server.cx">
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
    </context:component-scan>


    <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
        <property name="dataSource" ref="dataSource">
        </property>
    </bean>

    <bean id="myInterceptor" class="com.server.cx.util.AuditInterceptor"></bean>
    <!-- Jpa Entity Manager 配置 -->
    <bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="persistenceUnitName" value="defaultPU"/>
        <property name="jpaVendorAdapter" ref="hibernateJpaVendorAdapter"/>
        <property name="persistenceProvider">
            <bean class="com.server.cx.config.ConfigurableHibernatePersistence">
                <property name="interceptor">
                    <bean class="com.server.cx.util.AuditInterceptor"/>
                </property>
            </bean>
        </property>
        <property name="jpaProperties">
            <props>
                <prop key="hibernate.dialect">${hibernate.dialect}</prop>
                <prop key="hibernate.cache.region.factory_class">org.hibernate.cache.ehcache.EhCacheRegionFactory</prop>
                <prop key="net.sf.ehcache.configurationResourceName">ehcache/ehcache-hibernate-local.xml</prop>
                <prop key="hibernate.ejb.naming_strategy">${hibernate.ejb.naming_strategy}</prop>
                <prop key="hibernate.hbm2ddl.auto">update</prop>
                <prop key="hibernate.show_sql">${hibernate.show_sql}</prop>
            </props>
        </property>
    </bean>

    <bean id="hibernateJpaVendorAdapter" class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter"/>

    <!-- Spring Data Jpa配置 -->
    <jpa:repositories base-package="com.server.cx" transaction-manager-ref="transactionManager"
                      entity-manager-factory-ref="entityManagerFactory"/>

    <!-- Jpa 事务配置 -->
    <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
        <property name="entityManagerFactory" ref="entityManagerFactory"/>
    </bean>

    <!-- 使用annotation定义事务 -->
    <tx:annotation-driven transaction-manager="transactionManager" proxy-target-class="true"/>

    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <property name="maxUploadSize">
            <value>100000</value>
        </property>
    </bean>

    <!-- message resource beans -->
    <bean id="messageSource"
          class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
        <property name="fallbackToSystemLocale">
            <value>false</value>
        </property>
        <property name="basenames">
            <list>
                <value>classpath:resources/message</value>
            </list>
        </property>
    </bean>

    <bean id="cxinfosQueryIdRestSender" class="com.server.cx.util.RestSender">
        <constructor-arg value="http://10.90.3.122:38183/CXResourceManager/rest/cxinfos/queryById"/>
    </bean>
    <bean id="cxinfosUploadRestSender" class="com.server.cx.util.RestSender">
        <constructor-arg value="http://10.90.3.122:38183/CXResourceManager/rest/cxinfos/upload"/>
    </bean>
    <bean id="statusRestSender" class="com.server.cx.util.RestSender">
        <constructor-arg value="http://10.90.3.122:38183/CXResourceManager/rest/cxinfos/status"/>
    </bean>



    <bean id="restURL" class="java.lang.String">
        <constructor-arg value="rs/"/>
    </bean>

    <bean id="imageShowURL" class="java.lang.String">
        <constructor-arg value="http://10.90.3.122:38183/resources/rs/graphics/show?id="/>
    </bean>
    
    <bean id="fileUploadUrl" class="java.lang.String">
    	<constructor-arg value="http://10.90.3.122:38183/resources/rs/file" />
    </bean>

    <bean id="thumbnailSize" class="java.lang.String">
        <constructor-arg value="size=128X128"/>
    </bean>
    <aop:aspectj-autoproxy></aop:aspectj-autoproxy>
    <bean id="logging" class="com.server.cx.util.Logging"></bean>
 <!--   <bean id="customizableTraceInterceptor" class="org.springframework.aop.interceptor.CustomizableTraceInterceptor">
        <property name="enterMessage" value="Entering $[methodName]($[arguments])"/>
        <property name="exitMessage" value="Leaving $[methodName](): $[returnValue]"/>
    </bean>
    <aop:config>
        <aop:advisor advice-ref="customizableTraceInterceptor" pointcut="execution( * com.server.cx.webservice.rs.server.*.*(..))"/>
    </aop:config>-->

    <!-- production/local development环境 -->
    <beans profile="development">
        <context:property-placeholder ignore-unresolvable="true"
                                      location="classpath*:/application.properties,
          			  classpath*:/application.local.properties"/>

        <!-- 数据源配置, 使用DBCP数据库连接池 -->
        <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
            <!-- Connection Info -->
            <property name="driverClassName" value="${jdbc.driver}"/>
            <property name="url" value="${jdbc.url}"/>
            <property name="username" value="${jdbc.username}"/>
            <property name="password" value="${jdbc.password}"/>

            <!-- Connection Pooling Info -->
            <property name="maxActive" value="${dbcp.maxActive}"/>
            <property name="maxIdle" value="${dbcp.maxIdle}"/>
            <property name="defaultAutoCommit" value="false"/>
            <!-- 连接Idle一个小时后超时 -->
            <property name="timeBetweenEvictionRunsMillis" value="3600000"/>
            <property name="minEvictableIdleTimeMillis" value="3600000"/>
        </bean>

        <bean id="baseHostAddress" class="java.lang.String">
            <constructor-arg value="http://localhost:8080/CXServer/"/>
        </bean>

        <!-- 数据源配置,使用应用服务器的数据库连接池 -->
        <!--<jee:jndi-lookup id="dataSource" jndi-name="java:comp/env/jdbc/ExampleDB" />-->
    </beans>

    <beans profile="production">
        <context:property-placeholder ignore-unresolvable="true"
                                      location="classpath*:/application.properties,
          			  classpath*:/application.local.properties"/>

        <!-- 数据源配置, 使用DBCP数据库连接池 -->
        <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
            <!-- Connection Info -->
            <property name="driverClassName" value="${jdbc.driver}"/>
            <property name="url" value="${jdbc.url}"/>
            <property name="username" value="${jdbc.username}"/>
            <property name="password" value="${jdbc.password}"/>

            <!-- Connection Pooling Info -->
            <property name="maxActive" value="${dbcp.maxActive}"/>
            <property name="maxIdle" value="${dbcp.maxIdle}"/>
            <property name="defaultAutoCommit" value="false"/>
            <!-- 连接Idle一个小时后超时 -->
            <property name="timeBetweenEvictionRunsMillis" value="3600000"/>
            <property name="minEvictableIdleTimeMillis" value="3600000"/>
        </bean>

        <bean id="baseHostAddress" class="java.lang.String">
            <constructor-arg value="http://10.90.3.122:38183/CXServer/"/>
        </bean>

        <!-- 数据源配置,使用应用服务器的数据库连接池 -->
        <!--<jee:jndi-lookup id="dataSource" jndi-name="java:comp/env/jdbc/ExampleDB" />-->
    </beans>



    <!-- unit test环境 -->
    <beans profile="test">
        <context:property-placeholder ignore-resource-not-found="true"
                                      location="classpath*:/application.properties,
          			  classpath*:/application.test.properties"/>

        <!-- 嵌入式内存中数据库 -->
        <jdbc:embedded-database id="dataSource" type="H2">
            <jdbc:script location="classpath:sql/h2/schema.sql"/>
        </jdbc:embedded-database>

        <!-- 初始化默认数据 -->
        <bean class="org.springside.modules.test.data.DataInitializer" lazy-init="false">
            <property name="dataSource" ref="dataSource"/>
            <property name="dataFile" value="/data/sample-data.xml"/>
        </bean>

        <bean id="baseHostAddress" class="java.lang.String">
            <constructor-arg value="http://localhost:8080/CXServer/"/>
        </bean>
    </beans>

    <!-- functional test环境 -->
    <beans profile="functional">
        <context:property-placeholder ignore-resource-not-found="true"
                                      location="classpath*:/application.properties,
          			  classpath*:/application.functional.properties,
          			  classpath*:/application.functional-local.properties"/>

        <!-- DBCP连接池 -->
        <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
            <property name="driverClassName" value="${jdbc.driver}"/>
            <property name="url" value="${jdbc.url}"/>
            <property name="username" value="${jdbc.username}"/>
            <property name="password" value="${jdbc.password}"/>
            <property name="defaultAutoCommit" value="false"/>
        </bean>

        <!-- 初始化数据结构 -->
        <jdbc:initialize-database data-source="dataSource" ignore-failures="ALL">
            <jdbc:script location="classpath:sql/h2/schema.sql"/>
        </jdbc:initialize-database>
        
         <!-- 初始化默认数据 -->
        <bean class="org.springside.modules.test.data.DataInitializer" lazy-init="false">
            <property name="dataSource" ref="dataSource"/>
            <property name="dataFile" value="/data/sample-data.xml"/>
        </bean>

        <bean id="baseHostAddress" class="java.lang.String">
            <constructor-arg value="http://localhost:8080/CXServer/"/>
        </bean>
    </beans>
</beans>